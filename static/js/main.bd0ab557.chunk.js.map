{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signlnWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faArtstation","color","size","style","marginBottom","faGoogle","faGithub","Home","Profile","history","useHistory","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","setIsLoggedIn","init","setInit","useEffect","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAaAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,IAAMC,EAAmBT,IACnBU,EAAcV,IAASW,O,OCsCrBC,EAnDE,WAEb,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAgCF,mBAAS,IAAG,mBAArCG,EAAQ,KAAEC,EAAW,KAC5B,EAAoCJ,oBAAS,GAAK,mBAA3CK,EAAU,KAAEC,EAAa,KAChC,EAA0BN,mBAAS,IAAG,mBAA/BO,EAAK,KAAEC,EAAQ,KAEhBC,EAAW,SAACC,GACd,MAEIA,EADAC,OAASC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEN,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAK,uEACF,GAAvBA,EAAMK,iBAAiB,UAGfV,EAAW,CAAD,+BACCR,EAAYmB,+BAA+Bf,EAAOE,GAAU,KAAD,EAAxEc,EAAI,+CAESpB,EAAYqB,2BAA2BjB,EAAOE,GAAU,KAAD,GAApEc,EAAI,eAENE,QAAQC,IAAIH,GAAM,kDAElBT,EAAS,KAAMa,SAAS,0DAE/B,gBAba,sCAiBd,OACI,qCACI,uBAAMP,SAAUA,EAAUQ,UAAU,YAAW,UAC3C,uBAAOV,KAAK,QAAQW,KAAK,QAAQC,YAAY,QAAQC,UAAQ,EAACZ,MAAOZ,EAAOQ,SAAUA,EAAUa,UAAU,cAC1G,uBAAOV,KAAK,WAAWW,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACZ,MAAOV,EAAUM,SAAUA,EAAUa,UAAU,cACtH,uBAAOC,KAAK,SAASV,MAAOR,EAAa,iBAAmB,SAAUiB,UAAU,yBAC/Ef,GAAS,sBAAMe,UAAU,YAAW,SAAEf,OAE3C,sBAAMmB,QAVQ,WAAH,OAASpB,GAAc,SAACqB,GAAI,OAAMA,MAUfL,UAAU,aAAY,SAC/CjB,EAAa,UAAY,uBCF3BuB,EAvCF,WACT,IAAMC,EAAa,uCAAG,WAAOnB,GAAK,2EAU7B,MAJY,YAHAE,EACTF,EADAC,OAASC,MAITkB,EAAW,IAAIlC,EAAiBE,KAAKiC,mBACrB,WAATnB,IACPkB,EAAW,IAAIlC,EAAiBE,KAAKkC,oBACxC,SAEkBnC,EAAYoC,gBAAgBH,GAAU,KAAD,EAAlDb,EAAI,OACVE,QAAQC,IAAIH,GAAM,2CACrB,gBAdkB,sCAgBnB,OACI,sBAAKK,UAAU,gBAAe,UAC1B,cAAC,IAAe,CACZY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAACC,aAAc,MAE1B,cAAC,EAAQ,IACT,sBAAKjB,UAAU,WAAU,UACrB,yBAAQI,QAASG,EAAejB,KAAK,SAASU,UAAU,UAAS,kCAAsB,cAAC,IAAe,CAACY,KAAMM,SAC9G,yBAAQd,QAASG,EAAejB,KAAK,SAASU,UAAU,UAAS,kCAAsB,cAAC,IAAe,CAACY,KAAMO,gBChC/GC,EAFF,WAAH,OAAS,yCCeJC,EAbC,WACZ,IAIMC,EAAUC,cAChB,OACI,mCACI,wBAAQnB,QAPM,WAClB7B,EAAYiD,UACZF,EAAQG,KAAK,MAKsB,wBCM5BC,EAfI,WACf,OACI,8BACI,+BACI,6BACI,cAAC,IAAI,CAACC,GAAG,IAAG,oBAEhB,6BACI,cAAC,IAAI,CAACA,GAAG,WAAU,gCCsBxBC,EAzBG,SAAH,GAAsB,IAAjBC,EAAU,EAAVA,WAClB,OACE,eAAC,IAAM,WACJA,GAAc,cAAC,EAAU,IAC1B,cAAC,IAAM,UACJA,EACC,qCACE,cAAC,IAAK,CAACC,OAAK,EAACC,KAAK,IAAG,SACnB,cAAC,EAAI,MAEP,cAAC,IAAK,CAACD,OAAK,EAACC,KAAK,WAAU,SAC1B,cAAC,EAAO,SAIZ,cAAC,IAAK,CAACD,OAAK,EAACC,KAAK,IAAG,SACnB,cAAC,EAAI,YCIFC,MAtBf,WACE,MAAoCtD,oBAAS,GAAM,mBAA5CmD,EAAU,KAAEI,EAAa,KAChC,EAAwBvD,oBAAS,GAAM,mBAAhCwD,EAAI,KAAEC,EAAO,KAapB,OAXAC,qBAAU,WACR7D,EAAY8D,oBAAmB,SAACC,GAE5BL,EADEK,IAGY,GAEhBH,GAAQ,QAET,IAGD,mCACGD,EAAO,cAAC,EAAS,CAACL,WAAYA,IAAiB,Y,MChBtDU,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.bd0ab557.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD1WYapSb3fCybXN5anUgbbuyDP-fQjEaA\",\n  authDomain: \"adventcalendar-d50fc.firebaseapp.com\",\n  projectId: \"adventcalendar-d50fc\",\n  storageBucket: \"adventcalendar-d50fc.appspot.com\",\n  messagingSenderId: \"983622613978\",\n  appId: \"1:983622613978:web:85cc4971a5f7feb5241ee3\",\n  measurementId: \"G-XSVJK6MGJW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();","import { authService, firebaseInstance } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n              data = await authService.createUserWithEmailAndPassword(email, password);  \n            } else {\n              data = await authService.signlnWithEmailAndPassword(email, password);  \n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        } \n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n\n}\n\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle,faGithub, faArtstation } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        //console.log(event.target.name);\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faArtstation}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom: 30}}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue With Google <FontAwesomeIcon icon={faGoogle}/></button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue With Github <FontAwesomeIcon icon={faGithub}/></button>\n            </div>\n        </div>\n    )\n\n\n\n};\n\n\n\nexport default Auth;","const Home = () => <span>Home</span>;\n\nexport default Home;","import { authService  } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nconst Profile = () => {\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const history = useHistory();\n    return (\n        <>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}\n\nexport default Profile;","import { Link } from \"react-router-dom\";\nconst Navigation = () => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">My Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch /*, Redirect*/ } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({isLoggedIn}) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n        {/* <Redirect from=\"*\" to=\"/\"/> */}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Router\";\nimport { useEffect, useState } from \"react\";\nimport {authService} from \"fbase\"\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"init..\"}\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}